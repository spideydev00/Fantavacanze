plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.spideyDev.fantavacanze"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    // Add lint options to handle warnings
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId = "com.spideyDev.fantavacanze"
        minSdkVersion = 23
        targetSdkVersion = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

dependencies {
  // utilizza il BOM: gestisce tutte le versioni Firebase in blocco
  implementation(platform("com.google.firebase:firebase-bom:31.2.0"))
  implementation("com.google.firebase:firebase-analytics-ktx")
}

// Optional: Add this task to get more details about deprecation warnings
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    // Alternatively, to suppress these warnings:
    // options.compilerArgs << "-Xlint:none"
}

flutter {
    source = "../.."
}
